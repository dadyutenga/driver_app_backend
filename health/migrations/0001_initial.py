# Generated by Django 5.2.6 on 2025-09-24 13:29

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceEndpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('url_path', models.CharField(help_text='API endpoint path', max_length=255)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE'), ('PATCH', 'PATCH')], default='GET', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('check_interval_minutes', models.IntegerField(default=5)),
                ('timeout_seconds', models.IntegerField(default=30)),
                ('expected_status_code', models.IntegerField(default=200)),
                ('current_status', models.CharField(choices=[('operational', 'Operational'), ('degraded', 'Degraded Performance'), ('partial_outage', 'Partial Outage'), ('major_outage', 'Major Outage'), ('maintenance', 'Under Maintenance')], default='operational', max_length=20)),
                ('last_check', models.DateTimeField(blank=True, null=True)),
                ('last_response_time', models.FloatField(blank=True, help_text='Response time in seconds', null=True)),
                ('uptime_percentage', models.FloatField(default=100.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'health_service_endpoint',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StatusPageSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_title', models.CharField(default='Driver App Status', max_length=100)),
                ('page_description', models.TextField(default='Current status of Driver App services')),
                ('company_name', models.CharField(default='Driver App', max_length=100)),
                ('logo_url', models.URLField(blank=True)),
                ('show_response_times', models.BooleanField(default=True)),
                ('show_uptime_percentage', models.BooleanField(default=True)),
                ('show_incident_history', models.BooleanField(default=True)),
                ('refresh_interval_seconds', models.IntegerField(default=60)),
                ('enable_email_notifications', models.BooleanField(default=True)),
                ('notification_email', models.EmailField(blank=True, max_length=254)),
                ('primary_color', models.CharField(default='#3b82f6', max_length=7)),
                ('success_color', models.CharField(default='#10b981', max_length=7)),
                ('warning_color', models.CharField(default='#f59e0b', max_length=7)),
                ('danger_color', models.CharField(default='#ef4444', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Status Page Settings',
                'verbose_name_plural': 'Status Page Settings',
                'db_table': 'status_page_settings',
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('db_connection_time', models.FloatField(blank=True, null=True)),
                ('db_query_count', models.IntegerField(default=0)),
                ('memory_usage_mb', models.FloatField(blank=True, null=True)),
                ('memory_usage_percent', models.FloatField(blank=True, null=True)),
                ('cpu_usage_percent', models.FloatField(blank=True, null=True)),
                ('disk_usage_percent', models.FloatField(blank=True, null=True)),
                ('total_requests', models.IntegerField(default=0)),
                ('failed_requests', models.IntegerField(default=0)),
                ('avg_response_time', models.FloatField(blank=True, null=True)),
                ('twilio_status', models.CharField(default='unknown', max_length=20)),
                ('africastalking_status', models.CharField(default='unknown', max_length=20)),
                ('email_service_status', models.CharField(default='unknown', max_length=20)),
            ],
            options={
                'db_table': 'system_metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='StatusPageIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('incident_type', models.CharField(choices=[('incident', 'Incident'), ('maintenance', 'Scheduled Maintenance'), ('degradation', 'Performance Degradation')], default='incident', max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('investigating', 'Investigating'), ('identified', 'Identified'), ('monitoring', 'Monitoring'), ('resolved', 'Resolved'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='investigating', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('affected_endpoints', models.ManyToManyField(blank=True, to='health.serviceendpoint')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'status_page_incident',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIRequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('method', models.CharField(max_length=10)),
                ('path', models.CharField(max_length=500)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('status_code', models.IntegerField()),
                ('response_time', models.FloatField(help_text='Response time in seconds')),
                ('response_size', models.IntegerField(blank=True, help_text='Response size in bytes', null=True)),
                ('query_params', models.JSONField(blank=True, default=dict)),
                ('errors', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_request_log',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp'], name='api_request_timesta_a0db9c_idx'), models.Index(fields=['path', '-timestamp'], name='api_request_path_ccd300_idx'), models.Index(fields=['status_code', '-timestamp'], name='api_request_status__329813_idx'), models.Index(fields=['user', '-timestamp'], name='api_request_user_id_291089_idx')],
            },
        ),
        migrations.CreateModel(
            name='HealthCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_healthy', models.BooleanField(default=True)),
                ('response_time', models.FloatField(help_text='Response time in seconds')),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('response_size', models.IntegerField(blank=True, help_text='Response size in bytes', null=True)),
                ('headers', models.JSONField(blank=True, default=dict)),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_checks', to='health.serviceendpoint')),
            ],
            options={
                'db_table': 'health_check_log',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['endpoint', '-timestamp'], name='health_chec_endpoin_6fe240_idx'), models.Index(fields=['timestamp'], name='health_chec_timesta_a51c9c_idx'), models.Index(fields=['is_healthy'], name='health_chec_is_heal_86bae5_idx')],
            },
        ),
    ]
